{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <section class="post-form">
            <h2>Create a New Post</h2>
            <form action="/posts" method="POST">
                <!-- title of post -->
                <div>
                    <input type="text" name="title" id="title" placeholder="Title" required>
                </div>
                <!-- content of post -->
                <div>
                    <textarea name="content" id="content" rows="4" placeholder="What's on your mind?" required></textarea>
                </div>

                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <!-- emojis -->
            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <input type="text" id="emoji-search" placeholder="Search emojis..." oninput="searchEmojis()">
                <div id="emoji-grid" class="emoji-grid"></div>
            </div>
        </section>
    {{/if}}

    <!-- list of all the recent posts -->
    <section class="posts-list">
        <h2>Recent Posts</h2>
        {{#if posts.length}}
        <ul>
            {{#each posts}}
                {{> post this user=../user}}            
            {{/each}}
        </ul>
        {{else}}
            <p>- The path of Traiblaze is never treaded alone. Be the first to say something on this new journey! -</p>
        {{/if}}
    </section>
</section>


{{! JavaScript for Emoji Integration }}
<script>

    /*
    You want to show a subset of the emojis. About 200. However,
    you also want the user to be able to search all emojis,
    so, put them in this array when the array is empty so 
    that you have them.
    */

    let allEmojis = [];  // Global list to hold all emojis

    // reveal or hide the list of all emojis
    async function toggleEmojiPanel() {
        const container = document.getElementById('emoji-container');
        container.style.display = container.style.display === 'none' ? 'block' : 'none';

        if (container.style.display === 'block' && allEmojis.length === 0) {
            // fetch the emojis from the emoji api
            try {
                const apiKey = '{{apiKey}}';
                const response = await fetch(`https://emoji-api.com/emojis?access_key=${apiKey}`);
                const emojis = await response.json();
                allEmojis = emojis;
                displayEmojis(emojis);
            } catch (error) {
                console.error('Error:', error);
            }
        } else if (container.style.display === 'block' && allEmojis.length !== 0) {
            displayEmojis(allEmojis);
        }
    }

    // render the given emojis on the screen
    function displayEmojis(emojis,limit=200) {
        const container = document.getElementById('emoji-grid');
        container.innerHTML = '';  // Clear previous results
        if (Array.isArray(emojis) && emojis.length > 0) {
            emojis.slice(0, limit).forEach(emoji => {
                const emojiElement = document.createElement('span');
                emojiElement.textContent = emoji.character;
                emojiElement.title = emoji.slug;  // Showing the emoji name on hover
                emojiElement.style.cursor = 'pointer';
                emojiElement.onclick = () => insertEmoji(emoji.character);
                container.appendChild(emojiElement);
            });
        } else {
            container.textContent = 'No emojis found. Try a different search!';
        }
    }

    // filter the emojis with the given search term
    function searchEmojis() {
        const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
        const filteredEmojis = allEmojis.filter(emoji => emoji.unicodeName.toLowerCase().includes(searchTerm));
        displayEmojis(filteredEmojis);
    }

    // insert an emoji onto the text form
    function insertEmoji(emoji) {
        const textarea = document.getElementById('content');
        // keep focus on the textarea
        textarea.focus();
        // get the currently focused element
        const activeElement = document.activeElement;  
        console.log(activeElement);
        if (activeElement.tagName === 'INPUT' || activeElement.tagName === 'TEXTAREA') {
            const start = activeElement.selectionStart;
            const end = activeElement.selectionEnd;
            // add the emoji and move the cursor
            activeElement.value = activeElement.value.substring(0, start) + emoji + activeElement.value.substring(end);
            activeElement.selectionEnd = start + emoji.length;
            activeElement.selectionStart = activeElement.selectionEnd
            // refocus on the textarea
            activeElement.focus();
        }
    }
    
</script>